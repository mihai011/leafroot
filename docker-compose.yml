---
version: '3.7'

services:

    backend:
        build:
            context: .
            dockerfile: Dockerfile
            target: ${ENV}
        env_file:
            - ${ENV_FILE}
        container_name: backend
        hostname: backend
        restart: on-failure
        ports:
            - ${PORT}:${PORT}
        volumes:
            - .:/workspace
            - /workspace/venv/
        networks:
            - shared_network

    worker:
        build:
            context: .
            dockerfile: Dockerfile
            target: worker
        env_file:
            - ${ENV_FILE}
        container_name: worker
        hostname: worker
        restart: on-failure
        volumes:
            - .:/workspace
            - /workspace/venv/
        networks:
            - shared_network

    cassandra:
        image: cassandra:4.1.0
        ports:
            - 127.0.0.1:9042:9042
        container_name: cassandra
        hostname: ${CASSANDRA_HOST}
        networks:
            - shared_network

    db:
        image: postgres:14-alpine
        container_name: db
        hostname: ${POSTGRES_HOST}
        ports:
            - 127.0.0.1:5432:5432
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        networks:
            - shared_network

    mongo:
        image: mongo:latest
        container_name: mongo
        hostname: ${MONGO_HOST}
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
        ports:
            - 127.0.0.1:27017:27017
        volumes:
            - mongodb-data:/data/db
        networks:
            - shared_network


    redis:
        image: redis:latest
        container_name: redis
        hostname: ${REDIS_HOST}
        ports:
            - 127.0.0.1:6379:6379
        networks:
            - shared_network

    rabbitmq:
        image: rabbitmq:latest
        container_name: rabbitmq
        hostname: ${RABBITMQ_HOST}
        environment:
            - RABBITMQ_USER=${RABBITMQ_USER}
            - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
        ports:
            - 127.0.0.1:5672:5672
        networks:
            - shared_network

    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: root
        depends_on:
            - db
        networks:
            - shared_network
        ports:
            - 5050:80


volumes:
    postgres-data:
    pgadmin:
    mongodb-data:

networks:
    shared_network:
        driver: bridge
