"""particles.

Revision ID: 3a6abe1347e1
Revises: f0447f3df18e
Create Date: 2022-01-23 17:53:42.717637
"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "3a6abe1347e1"
down_revision = "f0447f3df18e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "electrons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("charge", sa.Float(), nullable=True),
        sa.Column("atom_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["atom_id"],
            ["atoms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "neutrons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("charge", sa.Float(), nullable=True),
        sa.Column("atom_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["atom_id"],
            ["atoms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "protons",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("charge", sa.Float(), nullable=True),
        sa.Column("atom_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["atom_id"],
            ["atoms.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("protons")
    op.drop_table("neutrons")
    op.drop_table("electrons")
    # ### end Alembic commands ###
